CREATE DATABASE IF NOT EXISTS bong_bike_shop;
USE bong_bike_shop;

CREATE TABLE IF NOT EXISTS users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    gender ENUM('Male','Female','Prefer not to say') DEFAULT 'Prefer not to say',
    contact_number VARCHAR(20),
    profile_image VARCHAR(255) DEFAULT NULL,
    email VARCHAR(150) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    is_verified TINYINT(1) DEFAULT 0,
    verification_code VARCHAR(64),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE IF NOT EXISTS products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    category_key VARCHAR(50) NOT NULL COMMENT 'Stores the key from productsData, e.g., BIK, APP',
    subcategory_key VARCHAR(50) NOT NULL COMMENT 'Stores the key from productsData, e.g., MTB, JRS',
    price DECIMAL(10, 2) NOT NULL,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS product_variations (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT NOT NULL,
    color_name VARCHAR(100) NOT NULL,
    size_name VARCHAR(100) NOT NULL,
    quantity INT NOT NULL DEFAULT 0,
    -- Ensure uniqueness for each color-size combination per product
    UNIQUE (product_id, color_name, size_name),
    FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS product_images (
    id INT AUTO_INCREMENT PRIMARY KEY,
    product_id INT NOT NULL,
    image_path VARCHAR(255) NOT NULL COMMENT 'Relative or absolute path to the image file',
    is_main TINYINT(1) DEFAULT 0 COMMENT 'Optional: Set one image as main/featured',
    display_order INT DEFAULT 0 COMMENT 'Optional: For controlling image order',
    FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS admin_users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL, -- Store hashed passwords
    last_login DATETIME NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

























